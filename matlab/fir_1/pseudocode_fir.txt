#define M 10000 //input's total number
#define N 64 //coefficient's total number

input[15:0]; //input is 16bit
reg [15:0] y [63:0];  //computational result array
reg output[15:0]; //output is 16bit

//create MEM
b=MEM_create(16,64)
//create 16bit FIFO
FIFO=FIFO_create(16);

if (rstn) then output=0;

if(cload) then
    b=mem_read(cin,caddr);    //load coefficient

   
if（clk1_posedge & valid_in） then 
    fifo_in(input);           //read input


//ALU

n=0, k=0;
x[15:0];
valid_out=0;

if(clk2_posedge) then{

    if(n<M-1){
        x=fifo_out(FIFO)

        for k=0 to k=N-1 do{
            
            y[n+k]=b[k]*x;
            output=y[n];
                
            valid_out=1;
        }end for

        n=n+1;
    }end if
    else valid_out=0;
}end if




